--Dataset: Student Life dataset from Kaggle
--Source: https://www.kaggle.com/datasets/steve1215rogg/student-lifestyle-dataset
--Credit & License: 
	@misc{sumit_kumar_2024,
	title={student lifestyle dataset},
	url={https://www.kaggle.com/dsv/9876359},
	DOI={10.34740/KAGGLE/DSV/9876359},
	publisher={Kaggle},
	author={Sumit Kumar},
	year={2024}
--Queried using: PostgreSQL in pgAdmin4

--Identify the percentage of unique individuals in the dataset that have a GPA over 3.0 and exercises at least 1 hour a day--
CREATE TEMP TABLE total_students AS --created a temp table for denominator: total number of students--
SELECT 
	COUNT(student_id) AS student_count
FROM student_lifestyle_ds; 

--develop the numerator 
CREATE TEMP TABLE student_gpa_pa AS 
SELECT COUNT(*) AS student_count
	FROM student_lifestyle_ds
	WHERE gpa > 3 
	AND physical_activity_hours_per_day >= 1; 

--FINAL query--
SELECT 
	ROUND((student_gpa_pa.student_count*100.00/total_students.student_count)) AS student_percentage
FROM total_students, student_gpa_pa; 

--this is another way to come to the same answer but in a subquery format
SELECT 
	ROUND((student_activity.student_count2*100.00/total_students.student_count)) AS student_percentage
FROM (SELECT 
		COUNT(student_id) AS student_count
		FROM student_lifestyle_ds ) AS total_students

WITH total_student AS
	(SELECT 
		COUNT(student_id) AS student_count
	FROM student_lifestyle_ds),
student_activity AS(
	SELECT 
		COUNT(*) AS student_count2
	FROM student_lifestyle_ds
	WHERE gpa > 3 
	AND physical_activity_hours_per_day >= 1)
SELECT 
	ROUND((student_gpa_pa.student_count2*100.00/total_students.student_count)) AS student_percentage
FROM total_students 
CROSS JOIN student_gpa_pa;
CROSS JOIN (SELECT 
				COUNT(*) AS student_count2
				FROM student_lifestyle_ds
				WHERE gpa > 3 
				AND physical_activity_hours_per_day >= 1) AS student_activity; 
